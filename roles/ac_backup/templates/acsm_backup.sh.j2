#!/bin/bash -e

# # #
#  
#   v20230413:
#   v20230716: add usage function, update storage check 
#   v20230725: remove rsync --log-file param, shorten retention to 20 days
##
#   Added by Ansible {{ ansible_date_time.date }}
#
# # #

#RETAIN=19
#PRUNE=6

function usage() {
  echo "";
  echo "This is a simple backup script for the ACSM Game Server. It:";
  echo " * checks available space on {{ site_fqdn }}";
  echo " * sleeps random >10 seconds";
  echo " * prunes zip files older than 30 days (+29) from {{ site_fqdn }}";
  echo " * backups acsm zip files from {{ ac_fqdn }} to {{ site_fqdn }}";
  echo " * prunes zip files older than 7 (+6) days from {{ ac_fqdn }}";
  echo "";#  
}

space_limit=98

# sanity checks
drive_full="$(df -k {{ ac_backup_destination }} | tail -n1 | awk '{print $5}' | sed 's/%//g')"
if [ $drive_full -gt $space_limit ]; then
    usage;
    echo "ERROR: Not enough space available, over $drive_full% full. Exiting.";
    exit 1;
elif [ $# -gt 0 ]; then
  usage;
  echo "ERROR: This script does not take parameters. Exiting.";
  exit 1;
fi
  
# sleep jitter
n=$((RANDOM % 10));
echo "$(date +%Y%m%d:%H%M%S): Sleeping $n seconds.";
sleep $n;

# prune local files
echo "Removing local .zips older than 30 (+29) days old."
find {{ ac_backup_destination }} -name *.zip -atime +29 -exec rm -rvf '{}' \;
if [ $? != 0 ]; then
    echo "$(date +%Y%m%d:%H%M%S): local prune failed. Exiting"
    exit 1;
fi

# prune local files
echo "Removing local .gz older than 30 (+29) days old."
find {{ ac_backup_destination }} -name *.gz -atime +29 -exec rm -rvf '{}' \;
if [ $? != 0 ]; then
    echo "$(date +%Y%m%d:%H%M%S): local prune failed. Exiting"
    exit 1;
fi

# copy remote files
echo "Pulling backups from {{ ac_fqdn }}";

rsync -a \
    --log-file={{ app_log }} \
    -e 'ssh -i /home/{{ app_user }}/.ssh/{{ app_user }}' \
    {{ ac_user }}@{{ ac_fqdn }}:{{ ac_backup_source }}/ \
    {{ ac_backup_destination }}

if [ $? != 0 ]; then
    echo "$(date +%Y%m%d:%H%M%S): rsync failed. Exiting"
    exit 1;
fi

# prune remote files
echo "Removing .zip files older than 2 (+1) days old on {{ ac_fqdn }}"

ssh -i /home/{{ app_user }}/.ssh/{{ app_user }} \
    {{ ac_user }}@{{ ac_fqdn }} "find {{ ac_backup_source }} \
        -name *.zip -ctime +1 -exec rm -rvf '{}' \;"

if [ $? != 0 ]; then
    echo "$(date +%Y%m%d:%H%M%S): prune failed. Exiting"
    exit 1;
fi

ssh -i /home/{{ app_user }}/.ssh/{{ app_user }} \
    {{ ac_user }}@{{ ac_fqdn }} "find {{ ac_backup_source }} \
        -name *.gz -ctime +1 -exec rm -rvf '{}' \;"

if [ $? != 0 ]; then
    echo "$(date +%Y%m%d:%H%M%S): prune failed. Exiting"
    exit 1;
fi

# exit
echo "$(date +%Y%m%d:%H%M%S): Done. Time taken: $SECONDS seconds.";
times;
echo "";

exit 0;
