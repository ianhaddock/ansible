# pihole install
---
- name: create pihole directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
    state: directory
  with_items:
    - "{{ containers_path }}/{{ app_name }}"

- name: pull git repo
  ansible.builtin.git:
    repo: https://github.com/pi-hole/pi-hole.git
    depth: 1
    dest: "{{ containers_path }}/{{ app_name }}/pi-hole"
    version: master

- name: create dest directory
  ansible.builtin.file:
    path: /etc/pihole
    owner: root
    group: root

- name: add setupVars.conf
  ansible.builtin.template:
    src: setupVars.conf.j2
    dest: /etc/pihole/setupVars.conf
    owner: root
    group: root
    mode: '0640'

- name: run unattended setup script
  become: true
  ansible.builtin.shell:
    cmd: >
      '{{ containers_path }}/{{ app_name }}/pi-hole/automated install/basic-install.sh' --unattended >>
      {{ containers_path }}/{{ app_name }}/pi-hole/install.log
  ignore_errors: true
  register: install_script

- name: debug output
  ansible.builtin.debug:
    msg: "{{ install_script }}"
  when: verbose

- name: set web password
  become: true
  ansible.builtin.command:
    cmd: 'pihole -a -p {{ pass_pihole }}'

- name: allow apple image handling in emails
  become: true
  ansible.builtin.lineinfile:
    path: /etc/pihole/pihole-FTL.conf
    regexp: '^BLOCK_ICLOUD_PR=true$'
    line: 'BLOCK_ICLOUD_PR=false'

- name: change web port to {{ app_port }}
  ansible.builtin.lineinfile:
    path: /etc/lighttpd/lighttpd.conf
    regexp: '^server.port                 = 80$'
    line: 'server.port                 = 8080'

- name: reload lighttpd
  ansible.builtin.systemd:
    name: lighttpd
    state: restarted

- name: open firewall ports
  ansible.builtin.firewalld:
    port: "{{ item }}"
    immediate: true
    permanent: true
    state: enabled
  with_items:
    - 53/tcp
    - 53/udp
    - 67/tcp
