# configure plex
---
- name: create directories for plex
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
    state: directory
  with_items:
    - "{{ containers_path }}/{{ app_name }}/config"
    - "{{ containers_path }}/{{ app_name }}/transcode"
    - "{{ media_path }}/audiobooks"
    - "{{ media_path }}/lemans"
    - "{{ media_path }}/movies"
    - "{{ media_path }}/music"
    - "{{ media_path }}/staging"
    - "{{ media_path }}/tvshows"
    - "{{ media_path }}/wec"
    - "{{ media_path }}/yoga"
    - "{{ media_path }}/youtube"
    - "{{ media_path }}/yt_tunes"


- name: create links in /mnt
  ansible.builtin.file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: root
    state: link
  loop:
    - {src: "{{ media_path }}/transmission", dest: /mnt/transmission}

- name: pull latest plex image
  become_user: "{{ app_user }}"
  containers.podman.podman_image:
    name: docker.io/plexinc/pms-docker:plexpass
  register: image_pull

- name: debug
  ansible.builtin.debug:
    msg: "{{ image_pull }}"
  when: verbose

  # image does not support keep-id, s6's abc user perms error s6-setuidgid
- name: start plex container:plexpass
  become_user: "{{ app_user }}"
  containers.podman.podman_container:
    recreate: true
    name: "{{ app_name }}"
    hostname: "plex"
    image: docker.io/plexinc/pms-docker:plexpass
    ports:
      - "{{ app_port }}:32400/tcp"
    volumes:
      - "{{ containers_path }}/{{ app_name }}/config:/config:Z"
      - "{{ containers_path }}/{{ app_name }}/transcode:/transcode:Z"
      - "{{ media_path }}:/mnt/media:ro"
        ### Required for hardware acceleration
        #    device:
        #      - '/dev/dri:/dev/dri'
        #    group_add:
        #      - 'keep-groups'
        ###
    env:
      ADVERTISE_IP: "http://{{ host_ip_address }}:{{ app_port }}/"
      PLEX_CLAIM: "{{ plex_claim }}"
      PLEX_UID: "{{ app_uid }}"
      PLEX_GID: "{{ app_gid }}"
      TZ: "{{ timezone }}"
    state: present
    generate_systemd: {"path": "/home/{{ app_user }}/.config/systemd/user"}
  when: image_pull.changed
  register: container_state

- name: debug plex podman
  ansible.builtin.debug:
    msg: "{{ container_state }}"
  when: verbose

- name: prune old images
  become_user: "{{ app_user }}"
  ansible.builtin.command:
    cmd: 'podman image prune -f -a'
  register: prune_debug

- name: debug
  ansible.builtin.debug:
    msg: "{{ prune_debug }}"
  when: verbose

- name: enable and start
  become_user: "{{ app_user }}"
  ansible.builtin.systemd:
    daemon-reload: true
    name: "container-{{ app_name }}"
    enabled: true
    state: started
    scope: user
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ app_uid }}"
  when: container_state.changed
  register: app_systemctl_debug

- name: debug plex podman
  ansible.builtin.debug:
    msg: "{{ app_systemctl_debug }}"
  when: verbose

- name: wait for first start to settle
  ansible.builtin.uri:
    url: "http://127.0.0.1:{{ app_port }}/web"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 720  # 720 * 5 = 1 hour
  delay: 5
