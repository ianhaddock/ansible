# transmission rootful container
---
- name: create directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
    state: directory
  with_items:
    - "{{ containers_path }}/{{ app_user }}/conf"
    - "{{ app_media }}/watch_folder"

- name: install transmission.json file
  ansible.builtin.template:
    src: templates/transmission-settings.json.j2
    dest: "{{ containers_path }}/{{ app_user }}/conf/settings.json"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0640'

- name: pull latest image
  become_user: "{{ app_user }}"
  containers.podman.podman_image:
    force: true
    name: lscr.io/linuxserver/transmission:latest
  register: image_pull

- name: debug pull
  ansible.builtin.debug:
    msg: "{{ image_pull }}"
  when: verbose

- name: pull transmission container:latest
  containers.podman.podman_container:
    recreate: true
    name: "{{ app_name }}"
    hostname: "{{ hostname }}"
    image: lscr.io/linuxserver/transmission:latest
    ports:
      - "{{ app_port }}:9091/tcp"
      - "{{ app_data_port }}:51412/udp"
      - "{{ app_data_port }}:51412/tcp"
    volumes:
      - "{{ containers_path }}/{{ app_user }}/conf:/config:Z"
      - "{{ app_media }}:/downloads:z"
      - "{{ app_media }}/watch_folder:/watch:z"
    env:
      TZ: "{{ timezone }}"
      PUID: "{{ app_uid }}"
      PGID: "{{ app_gid }}"
      USER: "{{ user_transmission }}"
      PASS: "{{ pass_transmission }}"
      PEERPORT: "{{ app_data_port }}"
    generate_systemd: {"path": "/etc/systemd/system"}
    state: present
  when: image_pull.changed
  register: container_state

- name: prune old images
  become_user: "{{ app_user }}"
  ansible.builtin.command:
    cmd: 'podman image prune -f -a'
  register: prune_debug

- name: debug
  ansible.builtin.debug:
    msg: "{{ prune_debug }}"
  when: verbose

- name: enable and start
  #  become_user: "{{ app_user }}"
  ansible.builtin.systemd:
    daemon-reload: true
    no_block: true
    name: "container-{{ app_name }}"
    enabled: true
    state: started
  when: container_state.changed
  register: files_systemctl_debug
