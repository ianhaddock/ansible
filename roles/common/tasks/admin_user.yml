# admin_user.yml
# sets admin user, group with passwordless sudo
---
- name: Add admin group
  ansible.builtin.group:
    name: "{{ admin_user }}"
    gid: "{{ admin_gid }}"
    state: present

- name: Add Fedora admin user
  ansible.builtin.user:
    name: "{{ admin_user }}"
    comment: admin user
    uid: "{{ admin_uid }}"
    group: "{{ admin_group }}"
    groups: wheel
    generate_ssh_key: true
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
    state: present
  when: ansible_os_family == 'RedHat'

- name: Add Debian admin user
  ansible.builtin.user:
    name: "{{ admin_user }}"
    comment: admin user
    uid: "{{ admin_uid }}"
    group: "{{ admin_group }}"
    groups: sudo
    shell: "/bin/bash"
    generate_ssh_key: true
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
    state: present
  when: ansible_os_family == 'Debian'

- name: Allow wheel passwordless sudo for Fedora
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s
  when: ansible_os_family == 'RedHat'

- name: Allow sudo passwordless sudo for Debian
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s
  when: ansible_os_family == 'Debian'

- name: install authorized keys
  ansible.posix.authorized_key:
    user: "{{ admin_user }}"
    state: present
    key: "{{ item }}"
  with_file:
    - "public_keys/{{ public_key }}"

- name: .add screenrc
  ansible.builtin.template:
    src: screenrc.j2
    dest: "/home/{{ admin_user }}/.screenrc"
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
    mode: '0640'

- name: add w to .bashrc
  ansible.builtin.lineinfile:
    path: "/home/{{ admin_user }}/.bashrc"
    regexp: '^w$'
    line: 'w  # show w on login'
